<div class="flex flex-col items-center justify-center p-6 bg-gray-50">
  <div class="w-full max-w-2xl p-6 space-y-4 bg-white shadow-lg rounded-2xl">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-2xl font-bold text-gray-900">{@category.name}</h1>
        <p :if={@category.description} class="text-gray-600">
          Description: {@category.description}
        </p>
        <p>
          Monthly budget:
          <.currency amount={@category.monthly_budget} class="text-2xl font-bold" />
        </p>

        <div class="mt-4">
          <div class="flex items-center justify-between mb-1">
            <span class="text-sm font-medium text-indigo-700">Spent</span>
            <span class="text-sm font-medium text-indigo-700">
              {@spending_percent}%
            </span>
          </div>
          <canvas id="spendingProgress" height="70"></canvas>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/chart.js">
        </script>
        <script>
          window.addEventListener("phx:page-loading-stop", function() {
            const percent = <%= @spending_percent %>;
            const ctx = document.getElementById('spendingProgress').getContext('2d');
            if (window.spendingChart) window.spendingChart.destroy();
            window.spendingChart = new Chart(ctx, {
              type: 'bar',
              data: {
                labels: ['Spent'],
                datasets: [{
                  label: 'Spending',
                  data: [percent],
                  backgroundColor: percent < 100 ? 'rgba(99, 102, 241, 0.7)' : 'rgba(239, 68, 68, 0.7)',
                  borderRadius: 8,
                  barPercentage: 0.7,
                  categoryPercentage: 0.7,
                }]
              },
              options: {
                indexAxis: 'y',
                scales: {
                  x: {
                    min: 0,
                    max: 100,
                    ticks: { callback: value => value + '%' }
                  }
                },
                plugins: {
                  legend: { display: false },
                  tooltip: { enabled: false }
                }
              }
            });
          });
        </script>
      </div>
    </div>

    <div class="py-6 text-center">
      <p :if={@category.expenses == []} class="mb-4 text-gray-600">ðŸ˜¢ Nothing spent yet...</p>
      <.link navigate={~p"/categories/#{@category}/new-expense"} class="btn-light">
        <.icon
          name="hero-plus"
          class="w-4 h-4 text-indigo-600 transition hover:text-indigo-400/75"
        /> Add Expense
      </.link>
    </div>

    <%= if Enum.any?(@category.expenses) do %>
      <div>
        <h2 class="mb-2 text-lg font-semibold text-gray-800">Latest expenses</h2>
        <ul class="space-y-2">
          <li
            :for={expense <- @category.expenses}
            class="p-4 transition bg-gray-100 rounded-xl hover:bg-gray-200"
          >
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-4">
                <.icon name="hero-banknotes" class="w-6 h-6 text-indigo-600" />
                <p class="text-sm text-gray-600">{expense.date}</p>
              </div>
              <button
                type="button"
                phx-click="delete_expense"
                phx-value-id={expense.id}
                data-confirm="Are you sure you want to delete the expense?"
                class="text-red-600 hover:text-red-800"
              >
                <.icon name="hero-trash" class="w-4 h-4" />
              </button>
            </div>
            <p class="font-medium text-gray-900">{expense.description}</p>
            <p class="text-sm text-gray-600">
              <.currency
                amount={Decimal.negate(expense.amount)}
                class="text-gray-400"
                negative_class="text-gray-400"
              />
            </p>
          </li>
        </ul>
      </div>
    <% end %>
    <.back navigate={~p"/categories"}>Back to categories</.back>
  </div>
</div>

<.modal
  :if={@live_action in [:new_expense, :edit_expense]}
  id="expense-dialog"
  on_cancel={JS.navigate(~p"/categories/#{@category}", replace: true)}
  show
>
  <.live_component
    module={ExpenseTrackerWeb.ExpenseLive.ExpenseDialog}
    id="expense"
    category={@category}
    expense={assigns[:expense] || default_expense()}
    action={@live_action}
  />
</.modal>
